pipeline {
    agent any
    tools{
        jdk 'jdk17'
        maven 'maven3'
    }
    stages{
        stage("Checkout"){
            steps{
                git branch: 'main', url: 'https://github.com/Madhumitha167/demoAPI.git'
            }
        }
        stage("Compile"){
            steps{
                dir('demoApi') {
                  sh "mvn clean compile"
              }
            }
        }
        stage("Test Cases"){
            steps{
                dir('demoApi'){
                  sh "mvn test"
                }
            }
        }
        stage("Sonarqube analysis"){
            environment{
                SONAR_URL = "http://13.212.27.88:9000/"
            }
            steps{
                 dir('demoApi'){
                   withCredentials([string(credentialsId:'Sonar-token', variable: 'SONAR_TOKEN')]){
                   sh "mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN -Dsonar.host.url=${SONAR_URL}"
                   }
                       
                }
            }
        }
        stage("Build"){
            steps{
                dir('demoApi'){
                  sh "mvn clean install"
                }
            }
        }
        stage("OWASP Dependency Check"){
            steps{
                 dir('demoApi'){
                   dependencyCheck additionalArguments: '--scan ./ ' , odcInstallation: 'Dp-check'
                   dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                 }
            }
        }
        stage("Build and push docker images"){
            steps{
                  script{
                    withDockerRegistry(credentialsId: 'Docker-credentials', toolName: 'docker') {
                    dir('demoApi'){
                     sh "docker build -t image1 ." 
                     sh "docker tag image1 madhu1607/basic:latest "
                     sh "docker push madhu1607/basic:latest"
                     sh "docker run -d -p 8070:8080 madhu1607/basic"
                    }  
                    }
                }
            }
        }
        
    }
}
