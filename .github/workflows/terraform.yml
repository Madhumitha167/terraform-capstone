on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  apply:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Terraform init
        run : terraform init
      - name: Terraform Plan
        run: terraform plan
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve
      - name: Get Instance IPs
        run: |
           INSTANCE_IPS=$(terraform output)
           echo "$INSTANCE_IPS" 
      - name: Set INSTANCE_IPS environment variable
        run: |
          sudo apt-get update
          sudo apt-get install jq
          INSTANCE_IPS=$(terraform output -json instance_ips | jq -r '.[]')
          echo "$INSTANCE_IPS"
          echo "INSTANCE_IPS=$INSTANCE_IPS" >> $GITHUB_ENV
          shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
   
      - name: Configure SSH Key
        run: |
           mkdir -p ~/.ssh
           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
           chmod 777 ~/.ssh/id_rsa
      - name: Run Ansible Playbook
        run: |
          IFS=',' read -ra IP_ARRAY <<< "$INSTANCE_IPS"
          for IP in "${IP_ARRAY[@]}"; do
            ansible-playbook -i "$IP," playbook.yml
          done
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        if: failure()
      
